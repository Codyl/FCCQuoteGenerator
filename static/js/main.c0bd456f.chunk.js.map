{"version":3,"sources":["reportWebVitals.js","QuoteMessage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CategoryButton","variant","this","props","parentState","category","children","toLowerCase","Button","style","margin","onClick","React","Component","QuoteMessage","state","getNewQuote","bind","setCategory","e","newCategory","target","innerText","setState","fetch","process","response","json","data","author","text","document","getElementById","classList","remove","offsetWidth","add","console","log","styles","textAlign","className","id","backgroundColor","borderRadius","padding","position","left","top","rel","href","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c0bd456f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport styles from \"./QuoteMessage.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass CategoryButton extends React.Component\r\n{\r\n  render()\r\n  {\r\n    let variant;\r\n    if(this.props.parentState.category === this.props.children.toLowerCase())\r\n    {\r\n      variant = 'primary';\r\n    }\r\n    else\r\n    {\r\n      variant = 'secondary';\r\n    }\r\n    return (\r\n      <Button style={{ margin: '3px'}} onClick={this.props.onClick} variant={variant}>{this.props.children}</Button>\r\n    );\r\n  }\r\n}\r\n\r\nclass QuoteMessage extends React.Component\r\n{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      category: 'business'\r\n    }\r\n    this.getNewQuote = this.getNewQuote.bind(this);\r\n    this.setCategory = this.setCategory.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    this.getNewQuote(this,'business');\r\n  }\r\n  setCategory(e)\r\n  {\r\n    const newCategory = e.target.innerText.toLowerCase();\r\n    this.setState({\r\n      category: newCategory\r\n    });\r\n    this.getNewQuote();\r\n  }\r\n  getNewQuote(){\r\n    const settings = {\r\n    \"async\": true,\r\n    \"crossDomain\": true,\r\n    \"url\": \"https://famous-quotes4.p.rapidapi.com/random?category=travel&count=1\",\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"x-rapidapi-key\": process.env.REACT_APP_quoteAPIKey,\r\n      \"x-rapidapi-host\": \"famous-quotes4.p.rapidapi.com\"\r\n    }\r\n  };\r\n    fetch('https://famous-quotes4.p.rapidapi.com/random?category='+this.state.category+'&count=1',settings)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n       this.setState({author: data[0].author, text: data[0].text});\r\n    }).then(\r\n      () =>\r\n      {\r\n\r\n        document.getElementById('quote-box').classList.remove(\"fadeInText\");\r\n        void document.getElementById('quote-box').offsetWidth;\r\n        document.getElementById('quote-box').classList.add(\"fadeInText\");\r\n      }\r\n    );\r\n  }\r\n  render(){\r\n    console.log(styles)\r\n    return (<div style={{textAlign:'center'}}>\r\n      <h1>Inspirational Quotes</h1>\r\n      <summary>Select a category</summary><hr/>\r\n      <CategoryButton onClick={this.setCategory} key='Communication' parentState={this.state}>Communication</CategoryButton>\r\n      <CategoryButton onClick={this.setCategory} key='Business' parentState={this.state}>Business</CategoryButton>\r\n      <CategoryButton onClick={this.setCategory} key='Success' parentState={this.state}>Success</CategoryButton>\r\n      <CategoryButton onClick={this.setCategory} key='Dating' parentState={this.state}>Dating</CategoryButton>\r\n      <CategoryButton onClick={this.setCategory} key='Funny' parentState={this.state}>Funny</CategoryButton>\r\n      <div className='fadeInText' id='quote-box' style={{backgroundColor: 'lightgrey',margin: \"10px 10%\", borderRadius:\"5px\", padding: '5px'}}>\r\n      <h2 id='author'>          \r\n        {this.state.author}\r\n      </h2>\r\n      <blockquote id='text'>\r\n        {this.state.text}\r\n      </blockquote>\r\n      </div>\r\n        <a style={{position:'absolute',left:'41%',top:305}} id=\"tweet-quote\" target=\"_blank\" rel=\"noreferrer\" href={`https://twitter.com/intent/tweet?text=${this.state.text}&hashtags=quotes`}>Tweet Quote</a>\r\n        <Button style={{position:'absolute',left:'50%',top:300}} id=\"new-quote\" variant='success' onClick={this.getNewQuote}>New Quote!</Button>\r\n     </div>);\r\n  }\r\n}\r\nexport default QuoteMessage;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport QuoteMessage from './QuoteMessage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <QuoteMessage/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}